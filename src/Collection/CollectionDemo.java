package Collection;
/*
*   集合的由来
*       我们学习的是面向对象语言，面向对象对事物的描述是通过对象提现的，为了方便对多个对象进行操作，必须把这个多个独享存储
*       而想要存储多个对象，就不能是一个基本的变量，而应该是一个容器类型的变量
*
*       数组和StringBuffer是之前学到过的
*           但是，StringBuffer的结果是一个字符串。不一定满足我们的要求，我们只能选择数组，那就是对象数组
*           但是，对象数组又不能适应变化的需求，因为数组中的长度是固定的，这个时候，为了适应变化，java提供了集合类供我们使用
*   数组和集合的区别？
*       a、长度区别
*           数组的长度固定
*           集合长度可变
*       b、内容不同
*           数组存储的是同一种类型的元素
*           集合可以存储不同类型的元素
*       c、元素的数据类型问题
*           数组可以存储基本数据类型，也可以存储引用数据类型
*           集合只能存储引用类型
*
*   集合是存储多个元素的，但是，存储多个元素也是有不同需求的
*   比如，要多个元素中不能有相同的元素；要多个元素按照某种规则排序一下
*       针对不同的需求，java提供了不同的集合类，所以有很多个集合类
*       多个集合类的数据结构不同，不仅要能够存出东西，还要能够使用这些东西，比如判断，获取
*       多个集合类是有共性的，把这些集合类的共性内容提取，最终就能形成集合的体系结构
*
*   Collection
*  List             Set
* ArrayList         HashSet
* Vector            TreeSet
* LinkedList
*
*   数据结构：数据的存储方式
*
*   分析：从具体到抽象
*   实现：凑抽象到具体
*   使用：使用具体的
*
* */
import java.util.*;

public class CollectionDemo {
    public static void main(String[] args) {
        //创建集合对象
        Collection c = new ArrayList();

        //添加一个元素
        c.add("hello");
        c.add("world");
        c.add("java");
        //输出集合
        System.out.println("c"+c);

        c.clear();
        System.out.println(c);
    }
}
